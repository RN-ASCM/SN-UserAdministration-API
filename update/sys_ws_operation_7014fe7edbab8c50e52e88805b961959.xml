<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>d2223794dbfbcc90c2727cde3b96199d</enforce_acl>
        <http_method>POST</http_method>
        <name>UpdateIncident</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
    var returnPayload = {};
    var requestUtil = new x_atear_user_admin.RequestUtil();
    var requestBody = request.body.dataString;
    var parser = new global.JSON();
    var bodyData = parser.decode(requestBody);


    var stateParam = bodyData.state;
    var sys_id = bodyData.sys_id;
	var caller_id = bodyData.caller_id;
    var on_hold_reason = bodyData.on_hold_reason;
    var on_hold_reason_text = bodyData.reason;
    var on_hold_end = bodyData.on_hold_end;
    var rpa = bodyData.rpa;
    var user_administration_type = bodyData.user_administration_type;
    var work_note = bodyData.work_note;

    if (gs.nil(stateParam) || gs.nil(sys_id) || gs.nil(caller_id)) {
        var missingFields = [];

        if (gs.nil(stateParam)) {
            missingFields.push('state');
        }

        if (gs.nil(sys_id)) {
            missingFields.push('sys_id');
        }
		
		if (gs.nil(caller_id)) {
            missingFields.push('caller_id');
        }

        returnPayload = {
            level: 'error',
            http_status: '400',
            status_message: "Mandatory fields missing",
            missing_fields: missingFields
        };
    } else if (!requestUtil.isStateParamValid(stateParam) ) {
        returnPayload = {
            level: 'error',
            http_status: '400',
            status_message: "Field value '"+stateParam+"' not recognized",
            field: "Field shold be queued, on_hold, resolved or failed"
        };
    } else if (!gs.nil(stateParam) && stateParam.toString() == 'on_hold' && (gs.nil(on_hold_reason) || gs.nil(on_hold_reason_text) || gs.nil(on_hold_end))){
        var missingOnHold = [];

        if(gs.nil(on_hold_reason))
        {
            missingOnHold.push('on_hold_reasom');
        }
        if(gs.nil(on_hold_reason_text))
        {
            missingOnHold.push('on_hold_reason_text');
        }
        if(gs.nil(on_hold_end))
        {
            missingOnHold.push('on_hold_end')
        }

        returnPayload = {
            level: 'error',
            http_status: '400',
            status_message: "Mandatory On hold information is missing ",
            missing_fields: missingOnHold
        };

    } else {
        returnPayload = requestUtil.updateIncident(sys_id, stateParam, caller_id, rpa, on_hold_reason, on_hold_reason_text, on_hold_end, user_administration_type, work_note);
    }

    response.setContentType('application/json');
    response.setStatus(returnPayload.http_status);
    var writer = response.getStreamWriter();
    writer.writeString(JSON.stringify(returnPayload));

    
})(request, response);]]></operation_script>
        <operation_uri>/api/x_atear_user_admin/v1/useraaministrationrpa/updateincident</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/updateincident</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>byv1</sys_created_by>
        <sys_created_on>2020-03-18 12:48:49</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>7014fe7edbab8c50e52e88805b961959</sys_id>
        <sys_mod_count>36</sys_mod_count>
        <sys_name>UpdateIncident</sys_name>
        <sys_package display_value="User Administration" source="x_atear_user_admin">25266ca6dbe3cc50c2727cde3b961916</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="User Administration">25266ca6dbe3cc50c2727cde3b961916</sys_scope>
        <sys_update_name>sys_ws_operation_7014fe7edbab8c50e52e88805b961959</sys_update_name>
        <sys_updated_by>zuve</sys_updated_by>
        <sys_updated_on>2023-02-02 12:23:29</sys_updated_on>
        <web_service_definition display_value="UserAdministrationRPA">ad9ca866db27cc50c2727cde3b961936</web_service_definition>
        <web_service_version display_value="v1">5edd206adb27cc50c2727cde3b961960</web_service_version>
    </sys_ws_operation>
</record_update>
